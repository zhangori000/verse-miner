[{"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\index.js":"1","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\App.js":"2","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\reportWebVitals.js":"3","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\layout\\Alert.js":"4","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\layout\\Navbar.js":"5","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\verses\\Verse.js":"6","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\verses\\Verses.js":"7","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\pages\\About.js":"8","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\signin\\Signin.js":"9","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\users\\Search.js":"10","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\layout\\Spinner.js":"11","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\verses\\VerseItem.js":"12","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\users\\Users.js":"13","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\users\\UserItem.js":"14"},{"size":478,"mtime":1606951158376,"results":"15","hashOfConfig":"16"},{"size":8717,"mtime":1607642377428,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":293,"mtime":1607183504490,"results":"19","hashOfConfig":"16"},{"size":865,"mtime":1607356493500,"results":"20","hashOfConfig":"16"},{"size":3531,"mtime":1607791500340,"results":"21","hashOfConfig":"16"},{"size":805,"mtime":1607642341785,"results":"22","hashOfConfig":"16"},{"size":277,"mtime":1607186500705,"results":"23","hashOfConfig":"16"},{"size":771,"mtime":1607359989049,"results":"24","hashOfConfig":"16"},{"size":1522,"mtime":1607183517709,"results":"25","hashOfConfig":"16"},{"size":305,"mtime":1607112047022,"results":"26","hashOfConfig":"16"},{"size":768,"mtime":1607449004874,"results":"27","hashOfConfig":"16"},{"size":491,"mtime":1607109692519,"results":"28","hashOfConfig":"16"},{"size":681,"mtime":1607108395768,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"mltql5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\index.js",[],["61","62"],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\App.js",["63","64"],"import React, { Component, Fragment} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport About from './components/pages/About';\nimport Navbar from './components/layout/Navbar';\nimport Verses from './components/verses/Verses';\nimport Verse from './components/verses/Verse';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport Signin from './components/signin/Signin';\nimport axios from 'axios';\nimport './App.css';\n\n// import GoogleImageSearch from 'free-google-image-search' *reminder: uninstall later\n \n\n\n//import Users from './components/users/Users'; *could be refactored for different purposes\n\nconst CORSLink = 'https://thawing-brushlands-63746.herokuapp.com/';\nconst apiLinks = {\n  github: 'https://api.github.com/users', \n  bible: 'https://labs.bible.org/api/?passage=romans%201-7&type=json'\n};\nvar currentUseCase = \"bible\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      verses: [], \n      verseAssociations: {},\n      loading: false,\n      alert: null\n    }\n  }\n  \n\n  // async componentDidMount() {\n  //   this.setState({ loading: true });\n  //   const res = await axios.get(CORSLink + apiLinks['bible']);\n  //   console.log(res.data);\n  //   if(currentUseCase === \"bible\") {\n  //     this.setState({ verses: res.data, loading: false})\n  //   } \n  //   else if(currentUseCase === \"github\") {\n  //     this.setState({ users: res.data, loading: false});\n  //   }\n  // }\n\n  //search verses\n  searchVerses = async (text) => {\n    this.setState({ loading: true });\n    \n    if(currentUseCase === \"bible\") {\n      //remove outer and inner spaces\n      var cleanText = text.trim().replace(/ /g, '');\n      if(cleanText[cleanText.length - 1] !== ';'){\n        cleanText = cleanText.concat(';');\n      }\n      console.log(cleanText);\n      var passageString = '';\n      this.parseVerseInput(cleanText).forEach(verseItem => {\n        const [bookname, chapter, verse] = verseItem;\n        passageString += `${bookname}%20${chapter}${verse};`; //verse has colon in it. \n        console.log(passageString);\n      });\n      \n      apiLinks['bible'] = `https://labs.bible.org/api/?passage=${passageString}&type=json`\n      console.log(apiLinks['bible']);\n      const res = await axios.get(CORSLink + apiLinks['bible']);\n      console.log('res.data', res.data);\n      this.setState({ verses: res.data, loading: false})\n      //afterwards, verses is filled with JSON objects containing \"bookname\", \"chapter\", and \"verse\" key (no colon).\n    } \n    else if(currentUseCase === \"github\") {\n      console.log(\"not implemented yet\");\n    }\n  }\n\n  //Parse verse input to assist query\n  parseVerseInput = (text) => {\n    //goal is to return array to destructure with values Bookname, Chapter, Verse\n    const parsedVerses = [];\n    let currentIdx = 0;\n    while(currentIdx < text.length - 1) {\n      console.log(currentIdx);\n      var singleVerse = this.getVerse(text, currentIdx);\n      var [currentBookname, currentChapter, currentVerse] = singleVerse;\n      //api returns gensis 1:1 when query is undefined\n      if(currentChapter === '') {\n        currentBookname = 'Genesis';\n        currentChapter = '1';\n        currentVerse = ':1';\n        singleVerse = [currentBookname, currentChapter, currentVerse]; //redundant?\n        this.setAlert('Invalid input', 'light');\n      }\n      parsedVerses.push(singleVerse);\n      console.log(\"length:\", singleVerse);\n      currentIdx += (currentBookname.length + currentChapter.length + currentVerse.length) + 1;\n    }\n    return parsedVerses;\n  }\n\n\n\n  //Get Single Verse\n  getVerse = (text, startingValue) => {\n    const parsedVerse = [];\n    //useful for calling substring() function\n    let subStringStartPoint = startingValue;\n    let subStringEndPoint = startingValue;\n    //edge case: 1 Timothy, 2 John, etc.\n    while(text[subStringEndPoint] !== ';' && !isNaN(text[subStringEndPoint])) {\n      subStringEndPoint++;\n    }\n    console.log(text[subStringEndPoint]);\n    if(text[subStringEndPoint] === ';') {\n      console.log(\"all numbers: error\");\n      return ['', '', ''];\n    }\n    //Retrieving Bookname substring\n    while(text[subStringEndPoint] !== ';' && isNaN(text[subStringEndPoint])) {\n      subStringEndPoint++;\n    }\n    if(text[subStringEndPoint] === ';') {\n      this.setAlert('We Cannot Print An Entire Book', 'light');\n      return [text.substring(subStringStartPoint, subStringEndPoint), '', ''];\n    }\n\n    parsedVerse.push(text.substring(startingValue ,subStringEndPoint));\n    subStringStartPoint = subStringEndPoint;\n\n    //Retreiving Chapter substring\n    while(text[subStringEndPoint] !== ';' && text[subStringEndPoint] !== ':') {\n      subStringEndPoint++;\n    }\n    parsedVerse.push(text.substring(subStringStartPoint, subStringEndPoint));\n\n    //Retreiving Verse Substring\n    if(text[subStringEndPoint] === ';') {\n      //this value SHOULD have been colon. If it is semicolon then there is no verse. Simply return without verse.\n      parsedVerse.push('');\n      return parsedVerse;\n    }\n    subStringStartPoint = subStringEndPoint; //keep in mind I did not skip colon. Verse has a colon in front of it. \n    while(text[subStringEndPoint] !== ';') {\n      subStringEndPoint++;\n    }\n    parsedVerse.push(text.substring(subStringStartPoint, subStringEndPoint));\n    return parsedVerse;\n  }\n\n  //clear verses ----\n  clearVerses = () => this.setState({ verses: [], loading: false });\n\n  // Set Alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: {msg, type}});\n\n    setTimeout(() => this.setState({ alert: null}), 3000);\n  }\n\n  //Get Single Verse data.\n  getVerseAssociations = (verseData) => {\n    \n    const [bookname, chapter, verse, text] = verseData.split(':');\n    if(bookname === 'Psalms') {\n      const bookname =  'Psalm';\n    }\n    const dashedBookname = bookname.replace(\" \", \"-\").toLowerCase();\n    const underscoredBookname = bookname.replace(\" \", \"_\").toLowerCase();\n    const noSpaceBookname = bookname.replace(\" \", \"\").toLowerCase();\n    console.log(bookname);\n    this.setState({ loading: true });\n    var data = {\n      philJohnsonUrl: `https://www.sermonaudio.com/search.asp?subsetitem=${bookname}&subsetcat=bible&keyword=Phil%5FJohnson&SpeakerOnly=true&includekeywords=&ExactVerse=`,\n      johnMacarthurUrl: `https://www.sermonaudio.com/search.asp?subsetitem=${bookname}&subsetcat=bible&keyword=johnmacarthur&SourceOnly=true&includekeywords=&ExactVerse=`,\n      heartCryUrl: `https://heartcrymissionary.com/resources/sermons/scripture/${dashedBookname}/`,\n      paulWasherUrl: `https://www.sermonaudio.com/search.asp?subsetitem=${bookname}&subsetcat=bible&keyword=Paul%5FWasher&SpeakerOnly=true&includekeywords=&ExactVerse=`,\n      onlineBibleUrl: `https://netbible.org/bible/${bookname}+${chapter}`,\n      bibleOrgUrl: `https://bible.org/book/${bookname}`,\n      bibleHubUrl: `https://biblehub.com/sermons/${underscoredBookname}/${chapter}-${verse}.htm`,\n      bibleCrossReferences: `https://www.openbible.info/labs/cross-references/search?q=${bookname}+${chapter}%${verse}A8`,\n      bibleHubParallel: `https://biblehub.com/${underscoredBookname}/${chapter}-${verse}.htm`,\n      constablesNotesUrl: `https://planobiblechapel.org/tcon/notes/pdf/${noSpaceBookname}.pdf`,\n      enduringWordUrl: `https://enduringword.com/bible-commentary/${dashedBookname}-${chapter}/`\n    };\n    this.setState({ verseAssociations: data, loading: false });\n  }\n\n  render() {  \n    const { verses, verseAssociations, loading} = this.state;\n    console.log(\"App.js Render()\", verseAssociations);\n\n    return (\n      <Router>\n      <div className=\"App\">\n        <Navbar title=\"Bible Verse Identifer\" icon='fas fa-bible'/>\n        <div className=\"container\">\n          <Alert alert={this.state.alert}/>\n          <Switch>\n            <Route exact path='/' render={props => (\n              <Fragment>\n                <Search \n                  searchVerses={this.searchVerses} \n                  clearVerses={this.clearVerses}\n                  showClear={verses.length > 0 ? true : false}\n                  setAlert={this.setAlert}\n                />\n                <Verses loading={loading} verses={verses} />\n              </Fragment>\n            )} />\n            <Route exact path='/about' component={About} />\n            <Route exact path='/signin' component={Signin} />\n            <Route exact path='/verse/:verseData' render={props => (\n              <Verse {...props } getVerseAssociations={this.getVerseAssociations} verseAssociations={verseAssociations} loading={loading}/>\n            )} />\n          </Switch>\n          \n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\reportWebVitals.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\layout\\Alert.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\layout\\Navbar.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\verses\\Verse.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\verses\\Verses.js",["65"],"import React from 'react';\r\nimport VerseItem from './VerseItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport Users from '../users/Users';\r\n\r\nconst Verses = ({ verses, loading }) => {\r\n    \r\n    if(loading) {\r\n        return <Spinner />\r\n    } else {\r\n        return(\r\n            <div style={userStyle}>\r\n                \r\n                {verses.map(v => (\r\n                    <VerseItem key={v.bookname + v.chapter + ':' + v.verse} verse={v} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nVerses.propTypes = {\r\n    verses: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nconst userStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    gridGap: '1rem'\r\n}\r\n\r\nexport default Verses","D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\pages\\About.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\signin\\Signin.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\users\\Search.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\layout\\Spinner.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\verses\\VerseItem.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\users\\Users.js",[],"D:\\Website stuff\\Brad Traversy\\React-Front-to-back\\verse-miner\\src\\components\\users\\UserItem.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":167,"column":38,"nodeType":"72","messageId":"73","endLine":167,"endColumn":42},{"ruleId":"70","severity":1,"message":"74","line":169,"column":13,"nodeType":"72","messageId":"73","endLine":169,"endColumn":21},{"ruleId":"70","severity":1,"message":"75","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":13},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'text' is assigned a value but never used.","Identifier","unusedVar","'bookname' is assigned a value but never used.","'Users' is defined but never used.","no-global-assign","no-unsafe-negation"]